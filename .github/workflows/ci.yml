name: CI

on:
  pull_request:
  push:
    branches:
      - "master"
    tags:
      - "*"

jobs:
  build:
    # When testing new Python or Django versions, one should use the
    # filterwarnings definition of setup.cfg to turn deprecation warnings
    # into errors.
    strategy:
      matrix:
        include:
          - name: Python 3.7 / Django 2.2
            python_version: "3.7"
            tox_env: py37-django22

          - name: Python 3.8 / Django 3.0
            python_version: "3.8"
            tox_env: py38-django30

          - name: Python 3.9 / Django 3.1
            python_version: "3.9"
            tox_env: py39-django31

          - name: Python 3.10 / Django 3.2
            python_version: "3.10"
            tox_env: py310-django32

          - name: Python 3.10 / Django 4.0
            python_version: "3.10"
            tox_env: py310-django40

          - name: Python 3.11 / Django 4.1
            python_version: "3.11"
            tox_env: py311-django41

          - name: Python 3.11 / Django 4.2
            python_version: "3.11"
            tox_env: py311-django42

          - name: Lint
            python_version: "3"
            tox_env: lint

          - name: Docs
            python_version: "3"
            tox_env: docs

    name: "${{ matrix.name }}"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        # Set health checks to wait until postgres has started
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Install poetry
        run: pip install poetry

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          cache: "poetry"

      - name: Configure Poetry to use Python ${{ matrix.python_version }}
        run: poetry env use "${{ matrix.python_version }}"

      - name: Install deps
        run: poetry install

      # - name: Install Tox
      #   run: pip install tox

      - name: Run ${{ matrix.name }}
        run: tox -e ${{ matrix.tox_env }}
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test

      - name: Display coverage
        uses: ewjoachim/coverage-comment-action@v1
        with:
          GITHUB_TOKEN: ${{ github.token }}

  report-status:
    name: success
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Report success
        run: echo 'Success !'
